#ifndef __ENDAS_CONFIG_H__
#define __ENDAS_CONFIG_H__

#include "Compiler.h"
#include <memory>

#define ENDAS_VERSION_MAJOR ${EnDAS_VERSION_MAJOR}
#define ENDAS_VERSION_MINOR ${EnDAS_VERSION_MINOR}

#define ENDAS_DLL


#if ${ENDAS_USING_BLAS}
#   define EIGEN_USE_BLAS
#endif

#if ${ENDAS_USING_LAPACK}
#   define EIGEN_USE_LAPACKE
#endif


// Defined as 1 if plotting functionality should be disabled (requires Python), otherwise 0
#define ENDAS_PLOTTING_ENABLED ${ENDAS_USING_PYTHON}

// Defined as 1 if colleciton of profiling data should be disabled, otherwise 0
#define ENDAS_PROFILING_DISABLED ${ENDAS_PROFILING_DISABLED}

// Defined as 1 if EnDAS should run in "deterministic" mode, otherwise 0
#define ENDAS_DETERMINISTIC ${ENDAS_DETERMINISTIC}


// Eigen capabilities. Currently assuming version 3.3
#define EIGEN_HAS_ITERATRORS 0
#define EIGEN_HAS_RESHAPE 0


/** Numeric type used for representing nearly all data in EnDAS. */
typedef double real_t;



#endif